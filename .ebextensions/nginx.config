commands:
  create_post_dir:
    command: "mkdir /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true

files:
  "/etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf.custom":
    mode: "000755"
    owner: root
    group: root
    content: |
      upstream nodejs {
        server 127.0.0.1:3000;
        keepalive 256;
      }

      server {
        listen 8080;
        location / {
          proxy_pass http://nodejs;
        }
      }

      server {
          listen 443 ssl;
          ssl_certificate /etc/letsencrypt/live/breakout-server-staging.media.mit.edu/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/breakout-server-staging.media.mit.edu/privkey.pem;
          
          if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
              set $year $1;
              set $month $2;
              set $day $3;
              set $hour $4;
          }
          access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
          access_log  /var/log/nginx/access.log  main;


          location / {
              proxy_pass  http://nodejs;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

          location /socket.io {
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $http_host;
              proxy_set_header X-NginX-Proxy true;
              proxy_set_header X-Ssl on;

              proxy_pass http://nodejs;
              proxy_redirect off;


              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
          }

          location /api/ {
              rewrite  ^/api/(.*)  /$1 break;
              proxy_pass http://nodejs;
          }
          
          gzip on;
          gzip_comp_level 4;
          gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      }

  "/etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf.custom":
    mode: "000755"
    owner: root
    group: root
    content: |
      server {
        listen 8080;
        location / {
          proxy_pass http://nodejs;
        }
      }

  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_restart_delayed_job.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash
      git clone https://github.com/certbot/certbot
      cd certbot
      mkdir /var/app/current/public/www
      /usr/sbin/nginx -s stop
      ./certbot-auto certonly --debug -m dcalacci@media.mit.edu --keep-until-expiring --agree-tos --staging --webroot -w /var/app/current/public/www -d rhythm-server-staging.media.mit.edu
      mv /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf.custom /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf
      /usr/sbin/nginx -s start
